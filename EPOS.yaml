openapi: 3.0.0
info:
  title: Omnibiz EPOS API Docs
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: https://api-dev.omnibiz.app
    description: Development server
  # - url: https://epos-utility-service.herokuapp.com
  #   description: Utility server
  # - url: https://api-uat.omnibiz.app
  #   description: UAT server
  # 
paths:
  /get-retailer-otp:
    get:
      tags: 
        - Utility Service
      summary: Retrieve a Retailer's OTP code
      description: Kindly use the following host to query Utility service https://epos-utility-service.herokuapp.com
      parameters:
        - in: query
          name: retailer_phone
          required: true
          schema:
            type: string
          description: The retailer's phone number

  /retaillog/api/Retailer/SendOTP:
    post:
      tags: 
        - Authentication Service
      summary: Sends an OTP to retailer's phone number and email
      # description: Optional extended description in CommonMark or HTML.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendOTPRequestModel'
      responses:
        '200':
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SendOTPResponseModel'

  /retailstore/api/Login/Authenticate/Epos:
    post:
      tags: 
        - Authentication Service
      summary: Authenticate a Retailer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateRequestModel'
      responses:
        '200':
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/AuthenticateResponseModel'
  /retailstore/api/product/Product/AvailableProducts:
    post:
      tags:
        - Product Service
      summary: Get Retailer's products with inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAvailableProductsRequestModel'
      responses:
        '200':
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GetAvailableProductsResponseModel'
  /retailstore/api/product/Product/Categories:
    get:
      tags:
        - Product Service
      summary: Get all product categories
      responses:
        '200':
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GetProductCategoriesResponseModel'
  /retailstore/api/product/Product/Brands:
    get:
      tags:
        - Product Service
      summary: Get all product brands
      responses:
        '200':
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/GetProductBrandsResponseModel'

components:
  schemas:
    SendOTPRequestModel:
      type: object
      properties:
        phone:
          type: string
          required: true
        otpMode:
          type: string
          enum: ["SMS", "WhatsApp"] 
          required: true
        source:
          type: string
          enum: ["Login"]
          required: true
    SendOTPResponseModel:
      type: object
      properties:
        Data:
          type: object
          properties: 
            Details:
              type: array
              items:
                type: object
                properties: 
                  ResultCode:
                    type: number
                    enum: [1, 0]
                  Result:
                    type: string
                  ResultStatus:
                    type: string
        Version:
          type: string
        DateTime:
          type: string
        ResponseType:
          type: string
        Message:
          type: string
        MessageTitle:
          type: string
        Errors:
          type: array
          items:
            type: string
        StatusCode:
          type: string
    AuthenticateRequestModel:
      type: object
      properties:
        loginId:
          type: string
          required: true
        otp:
          type: number
          required: true
        password:
          type: string
          required: true
        GrantType:
          type: string
          enum: ["OTP", "PASSWORD"]
          required: true
        source:
          type: string
          enum: ["Login"]
          required: true
    AuthenticateResponseModel:
      type: object
      properties:
        Data:
          type: object
          properties: 
            RetailId:
              type: number
              example: 9784879
            RetailName:
              type: string
              example: No name
            CountryId:
              type: number
              example: 1
            CountryName:
              type: string
            StateId:
              type: number
            StateName:
              type: string
            CityId:
              type: number
            CityName:
              type: string
            TownId:
              type: number
            TownName:
              type: string
            AccessToken:
              type: string
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJCdXNpbmVzc0lkIjoiNzYiLCJVc2VySWQiOiI0NTA
            RefreshToken:
              type: string
              example: 8a78a131-3e5e-46c4-ae75-8157bd7
            Expires:
              type: string
            Email:
              type: string
            Phone:
              type: string
        Version:
          type: string
        DateTime:
          type: string
        ResponseType:
          type: string
        Message:
          type: string
        MessageTitle:
          type: string
        Errors:
          type: array
          items:
            type: string
        StatusCode:
          type: string
    GetAvailableProductsRequestModel:
      type: object
      properties:
        RetailerId:
          type: number
          required: true
        CategoryIds:
          type: array
          items:
            type: number
        BrandIds:
          type: array
          items:
            type: number
        PageIndex:
          type: number
          required: false
          example: 1
        PageSize:
          type: number
          required: false
          example: 10
        SortBy:
          type: string
          enum: ["ProductName"]
          required: false
        SortDirection:
          type: string
          enum: ["ASC", "DESC"]
        SearchKeyword:
          type: string
          required: false
    GetAvailableProductsResponseModel:
      type: object
      properties:
        Count:
          type: number
          required: true
        Products:
          type: array
          items:
            $ref: '#/components/schemas/ProductModel'
    GetProductCategoriesResponseModel:
      type: object
      properties:
        Count:
          type: number
          required: true
        Categories:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
    GetProductBrandsResponseModel:
      type: object
      properties:
        Count:
          type: number
          required: true
        Brands:
          type: array
          items:
            $ref: '#/components/schemas/ProductBrand'
    ProductCategory:
      type: object
      properties:
        Category_ID:
          type: number
        Category_Name:
          type: string
    ProductBrand:
      type: object
      properties:
        Brand_ID:
          type: number
        Brand_Name:
          type: string
    ProductModel:
      type: object
      properties:
        ProductId:
          type: number
        ProductName:
          type: string
        BrandID:
          type: number
        CategoryID:
          type: number
        ProductCode:
          type: string
        UnitWeight:
          type: string
        IsActive:
          type: boolean
        ProductImages:
          type: array
          items: 
            $ref: '#/components/schemas/ProductImage'
    ProductImage:
      type: object
      properties:
        ProductImageId:
          type: number
        ProductId:
          type: number
        ProductImage:
          type: string

